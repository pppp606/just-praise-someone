openapi: 3.0.0
info:
  title: Just Praise Someone API
  version: 1.0.0
  description: Just Praise SomeoneのAPI仕様書

servers:
  - url: /api
    description: APIのベースURL

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        name:
          type: string
        email:
          type: string
        emailVerified:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        profile:
          $ref: '#/components/schemas/UserProfile'

    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        providerAccountId:
          type: string
        providerUserId:
          type: string
        image:
          type: string
        bio:
          type: string
        snsLinks:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Praise:
      type: object
      properties:
        id:
          type: string
          format: uuid
        givenUserId:
          type: string
          format: uuid
        receivedUserId:
          type: string
          format: uuid
        content:
          type: string
          maxLength: 255
        isApproved:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'

    Skill:
      type: object
      properties:
        id:
          type: string
          format: uuid
        code:
          type: string
        name:
          type: string
        sortOrder:
          type: integer

paths:
  /auth/[...nextauth]:
    get:
      summary: NextAuth認証エンドポイント
      tags:
        - Authentication
      responses:
        '200':
          description: 認証成功
    post:
      summary: NextAuth認証エンドポイント
      tags:
        - Authentication
      responses:
        '200':
          description: 認証成功

  /users/{id}:
    get:
      summary: ユーザー情報の取得
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ユーザー情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: ユーザーが見つかりません

    put:
      summary: ユーザー情報の更新
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 更新成功
        '404':
          description: ユーザーが見つかりません
        '401':
          description: 認証エラー

    delete:
      summary: ユーザーの削除
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 削除成功
        '404':
          description: ユーザーが見つかりません
        '401':
          description: 認証エラー

  /praises:
    get:
      summary: 褒めの一覧取得
      tags:
        - Praises
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: [received, given]
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: 褒めの一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Praise'
        '400':
          description: バリデーションエラー

  /praises/{id}:
    get:
      summary: 特定の褒めの取得
      tags:
        - Praises
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 褒めの詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Praise'
        '404':
          description: 褒めが見つかりません

    put:
      summary: 褒めの更新
      tags:
        - Praises
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Praise'
      responses:
        '200':
          description: 更新成功
        '404':
          description: 褒めが見つかりません
        '401':
          description: 認証エラー

    delete:
      summary: 褒めの削除
      tags:
        - Praises
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 削除成功
        '404':
          description: 褒めが見つかりません
        '401':
          description: 認証エラー

    patch:
      summary: 褒めの承認状態の更新
      tags:
        - Praises
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isApproved:
                  type: boolean
      responses:
        '200':
          description: 更新成功
        '404':
          description: 褒めが見つかりません
        '401':
          description: 認証エラー

  /skills:
    get:
      summary: スキル一覧の取得
      tags:
        - Skills
      responses:
        '200':
          description: スキル一覧
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Skill'

  /github/events/{userId}:
    get:
      summary: GitHubイベントの取得
      tags:
        - GitHub
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: GitHubイベント一覧
        '404':
          description: ユーザーが見つかりません

  /ai-praise:
    post:
      summary: AIによる褒めの生成
      tags:
        - AI
      responses:
        '201':
          description: 生成ジョブの作成成功
        '404':
          description: ユーザーが見つかりません
        '401':
          description: 認証エラー 